@model BackEndCapstone.Models.MapViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<style>
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 400px;
        width: 400px;
    }
</style>


<div class="row">
    <div id="map"></div>
    <div id="cards"></div>
    <script>
        var map;
        function initMap() {
            var infoWindow = new google.maps.InfoWindow();
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 39.5, lng: -98.35 },
                zoom: 3
            });

            google.maps.event.addListener(map, 'click', function () {
                infoWindow.close();
            });

            var markers = [];



            @foreach (var item in @Model.ApplicationUsers) {
                <text>
                    var marker = new google.maps.Marker({
                        map: map,
                        position: { lat: @item.Lat, lng: @item.Lng },
                        title: `@item.Name`
                    });

                    google.maps.event.addListener(marker, 'click', (function (marker) {
                        return function () {
                            infoWindow.setContent(`<div id="content"> <h1 id="firstHeading" class="firstHeading">@item.Name</h1> <div id="bodyContent">Test</div> <button onClick=generateTourCard(@item)>Add to tour</button> </div>`);
                            infoWindow.open(map, marker);
                        }
                    })(marker));

                    markers.push(marker)
                </text>

             }


        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBedz54CszWCt94vm9gZGAYJdQC5v487nI&callback=initMap"
            async defer></script>
    <script src="~/js/Map.js"></script>

</div>