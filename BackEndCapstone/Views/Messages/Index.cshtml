@model IEnumerable<BackEndCapstone.Models.Messages>
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Index";
}

<style>
    .content {
        display: flex;
        flex-direction: row;
    }

    .sidebar {
        display: flex;
        flex-direction: column;
        margin-top: 50px;
    }

    .inboxButton {
        margin-bottom: 10px;
    }

    .messages {
        display: flex;
        flex-direction: column;
        margin-left: 300px;
    }

    .receivedMessages {
        display: flex;
        flex-direction: column;
        flex-wrap: wrap;
    }

    .hidden {
        display: none !important;
    }

    .card {
        padding-bottom: 10px;
    }

    .card-body {
        display: flex;
        flex-direction: column;
    }

    .individualMessage {
        display: flex;
        flex-direction: row;
        border: 1px solid black;
        width: 600px;
        padding: 5px 10px 0px 10px;
        justify-content: space-between;
        cursor: pointer;
    }

    .individualMessage span {
        margin-bottom: 5px;
    }

    #receivedTimestamp {
        color: silver;
    }

    .individualSentMessage {
        display: flex;
        flex-direction: row;
        border: 1px solid black;
        width: 600px;
        padding: 5px 10px 0px 10px;
        justify-content: space-between;
        cursor: pointer;
    }

    .individualSentMessage span {
        margin-bottom: 5px;
    }

    #sentTimestamp {
        color: silver;
    }

    .btn-group-xs > .btn, .btn-xs {
        padding: .25rem .4rem;
        font-size: .875rem;
        line-height: .5;
        border-radius: .2rem;
        width: 30px;
    }

    .unread {
        font-weight: bold;
    }
</style>


<section class="content">
    <section class="sidebar">
        <button class="inboxButton">Inbox</button>
        <button class="sentButton">Sent</button>
    </section>
    <section class="messages">
        <section class="receivedMessages">
            <h2>Inbox</h2>
            <div class="row">
                <div class="col-sm-6">
                    @foreach (var item in Model)
                    {
                        if (item.RecipientId == UserManager.GetUserAsync(User).Result.Id)
                        {
                            <div class="card border-primary mb-3 messageCard hidden" style="max-width: 20rem; min-width: 20rem; min-height: 10rem; max-height: 30rem;">
                                <div class="card-body">
                                    <button type="button" class="btn btn-primary btn-xs">&times;</button>
                                    <h5 class="card-title">@item.Sender.Name</h5>
                                    <h5 class="card-subtitle">@item.Timestamp</h5>
                                    <p class="card-text">Dates: @item.Dates</p>
                                    <p class="card-text">@item.MessageText</p>
                                    <button id="messageReply">Reply</button>
                                </div>
                            </div>
                            if (item.IsRead == false)
                            {
                                <span class="individualMessage unread" id="@item.MessagesId">
                                    <span id="receivedSender">@item.Sender.Name</span>
                                    <span id="receivedDates">Dates: @item.Dates</span>
                                    <span id="receivedTimestamp">@item.Timestamp</span>
                                </span>
                            }
                            if (item.IsRead == true)
                            {
                                <span class="individualMessage" id="@item.MessagesId">
                                    <span id="receivedSender">@item.Sender.Name</span>
                                    <span id="receivedDates">Dates: @item.Dates</span>
                                    <span id="receivedTimestamp">@item.Timestamp</span>
                                </span>
                            }
                            <input id="senderId" type="hidden" value="@UserManager.GetUserAsync(User).Result.Id" />
                            <input id="recipientId" type="hidden" value="@item.Sender.Id" />
                            <input id="messageDates" type="hidden" value=@item.Dates />
                        }
                    }
                </div>
            </div>
        </section>

        <section class="sentMessages hidden">
            <h2>Sent</h2>
            <div class="row">
                <div class="col-sm-6">
                    @foreach (var item in Model)
                    {
                        if (item.SenderId == UserManager.GetUserAsync(User).Result.Id)
                        {
                            <div class="card border-primary mb-3 sentCard hidden" style="max-width: 20rem; min-width: 20rem; min-height: 10rem; max-height: 10rem;">
                                <div class="card-body">
                                    <button type="button" class="btn btn-primary btn-xs closeSent">&times;</button>
                                    <h5 class="card-title">@item.Recipient.Name</h5>
                                    <h5 class="card-subtitle">@item.Timestamp</h5>
                                    <p class="card-text">Dates: @item.Dates</p>
                                    <p class="card-text">@item.MessageText</p>
                                </div>
                            </div>
                            <span class="individualSentMessage" id="@item.MessagesId">
                                <span id="sentSender">To: @item.Sender.Name</span>
                                <span id="sentDates">Dates: @item.Dates</span>
                                <span id="sentTimestamp">@item.Timestamp</span>
                            </span>
                        }
                    }
                </div>
            </div>
        </section>
    </section>
</section>

<script src="~/js/Messages.js"></script>